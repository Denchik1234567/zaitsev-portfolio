from app import app, PROJECTS_LIST
import os
import shutil


def build_static_site():
    print("üî® –°–±–æ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∞–π—Ç–∞ –¥–ª—è GitHub Pages...")

    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É docs –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs('docs', exist_ok=True)

    # –ö–æ–ø–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã (CSS, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
    if os.path.exists('docs/static'):
        shutil.rmtree('docs/static')

    if os.path.exists('static'):
        shutil.copytree('static', 'docs/static')
        print("‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã")
    else:
        print("‚ùå –ü–∞–ø–∫–∞ static –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Flask –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤–Ω–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞
    app.config['SERVER_NAME'] = 'localhost:5000'
    app.config['APPLICATION_ROOT'] = '/'
    app.config['PREFERRED_URL_SCHEME'] = 'http'

    with app.app_context():
        try:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            with open('docs/index.html', 'w', encoding='utf-8') as f:
                f.write(render_template_safe('index.html'))
            print("‚úÖ index.html —Å–æ–∑–¥–∞–Ω")

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø—ã—Ç–∞
            with open('docs/experience.html', 'w', encoding='utf-8') as f:
                f.write(render_template_safe('experience.html'))
            print("‚úÖ experience.html —Å–æ–∑–¥–∞–Ω")

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ–µ–∫—Ç–æ–≤
            with open('docs/projects.html', 'w', encoding='utf-8') as f:
                f.write(render_template_safe('projects.html', projects=PROJECTS_LIST))
            print("‚úÖ projects.html —Å–æ–∑–¥–∞–Ω")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ HTML: {e}")
            return

    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª .nojekyll –¥–ª—è GitHub Pages
    with open('docs/.nojekyll', 'w') as f:
        f.write('')
    print("‚úÖ .nojekyll —Å–æ–∑–¥–∞–Ω")

    print("\nüéâ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∞–π—Ç —Å–æ–∑–¥–∞–Ω –≤ –ø–∞–ø–∫–µ docs/")
    print("üìÅ –î–ª—è GitHub Pages –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–ø–∫—É: /docs")
    print("üåê –°–∞–π—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://your-username.github.io/your-repository-name/")


def render_template_safe(template_name, **context):
    """–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —à–∞–±–ª–æ–Ω–∞ —Å –∑–∞–º–µ–Ω–æ–π Flask –ø—É—Ç–µ–π –Ω–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ"""
    from flask import render_template

    # –†–µ–Ω–¥–µ—Ä–∏–º —à–∞–±–ª–æ–Ω
    html = render_template(template_name, **context)

    # –ó–∞–º–µ–Ω—è–µ–º Flask –ø—É—Ç–∏ –Ω–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ
    html = html.replace("{{ url_for('static', filename='", "static/")
    html = html.replace("') }}", "")
    html = html.replace("{{ url_for('index') }}", "index.html")
    html = html.replace("{{ url_for('experience') }}", "experience.html")
    html = html.replace("{{ url_for('projects') }}", "projects.html")

    return html


if __name__ == '__main__':
    build_static_site()